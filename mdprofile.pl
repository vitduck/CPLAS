#!/usr/bin/env perl 

use strict; 
use warnings; 

use Getopt::Long;  
use Pod::Usage; 

use GenUtil qw( read_line ); 
use VASP    qw( read_profile write_md save_traj retrieve_traj ); 

my @usages = qw( NAME SYSNOPSIS OPTIONS NOTE ); 

# POD 
=head1 NAME 

mdprofile.pl: extract the potential profile from OSZICAR  

=head1 SYNOPSIS

mdprofile.pl [-h]

=head1 OPTIONS

=over 8

=item B<-h>

Print the help message and exit.

=back

=head1 NOTE 

If MD is terminated unexpectedly, there will be mistmatch between trajectry and profile.   
Thus, a trajectory generated by xdatcar.pl is mandantory for consistency check. 

=cut

my $help = 0; 

# parse optional arguments 
GetOptions('h' => \$help) or pod2usage(-verbose => 1); 

# help message
if ( $help ) { pod2usage(-verbose => 99, -section => \@usages) } 

# default 
my $trajectory = 'traj.dat'; 
my $profile    = 'profile.dat'; 

# pre-generated trajectory
my %traj = retrieve_traj($trajectory);  

# profile
my %md   = read_profile(read_line('OSZICAR')); 

# synchronization two hashses 
my $ntraj = keys %traj; 
my $nmd   = keys %md; 

if ( $ntraj > $nmd  ) { 
    for my $istep ( keys %traj ) { 
        delete $traj{$istep} unless exists $md{$istep}; 
    } 
} elsif ( $ntraj < $nmd ) { 
    for my $istep ( keys %md ) { 
        delete $md{$istep} unless exists $traj{$istep}; 
    } 
}

# store trajectory to disk 
unless ( $ntraj == $nmd ) { 
    print "=> Mismatch between XDATCAR and OSZICAR\n\n"; 
    save_traj(\%traj, $trajectory, 1); 
    print "\n"; 
}

# profile.dat
print "=> Potential profile is written to $profile\n"; 
write_md(\%md, $profile); 
